version: "3.9"
services:
  rabbitmq:
    container_name: rabbit_mq
    image: library/rabbitmq:alpine
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 15s
      timeout: 5s
      retries: 5
    ports:
      - 15691:15691
      - 5672:5672
    networks:
      - mynetwork
  postgres:
    image: library/postgres:alpine
    container_name: postgres_db
    volumes:
      - ./pgdata:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    env_file:
      - ./.env
    ports:
      - 5432:5432
    networks:
      - mynetwork
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
  api:
    build:
      context: ./
      dockerfile: STGB_backend/Dockerfile
    container_name: stgb_backend
    command: bash
    #    command: uvicorn main:app --host 0.0.0.0 --port 8000
    #    command: python -m http.server 8000
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
    env_file: .env
    environment:
      - RABBITMQ=rabbitmq
      - SQLALCHEMY_DATABASE_URI=postgresql+psycopg2://postgres:postgres@postgres/postgres
    links:
      - rabbitmq
      - postgres
    restart: on-failure
    networks:
      - mynetwork
    ports:
      - 8000:8000
#    ports:
#      - target: 8000
#        published: 8000

#  bot:
#    build:
#      context: ./
#      dockerfile: STGB_bot/Dockerfile
#    container_name: stgb_bot
#    depends_on:
#      rabbitmq:
#        condition: service_healthy
#


networks:
  mynetwork: